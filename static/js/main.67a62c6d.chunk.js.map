{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","images/logo.png","images/bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","OWNER_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","className","src","logo","alt","Number","target","href","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","WalletAddress","toUpperCase","TheOwnerAddress","gasLimit","COST1","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67a62c6d.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","export default __webpack_public_path__ + \"static/media/logo.89aa4242.png\";","export default __webpack_public_path__ + \"static/media/bg.073efbea.jpg\";","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from './redux/blockchain/blockchainActions';\nimport { fetchData } from './redux/data/dataActions';\nimport './styles/App.css';\nimport logo from './images/logo.png';\nimport bg from './images/bg.jpg';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: '',\n    OWNER_ADDRESS: \"\",\n\n    SCAN_LINK: '',\n    NETWORK: {\n      NAME: '',\n      SYMBOL: '',\n      ID: 0,\n    },\n    NFT_NAME: '',\n    SYMBOL: '',\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: '',\n    MARKETPLACE_LINK: '',\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let WalletAddress = blockchain.account;\n    WalletAddress = WalletAddress.toUpperCase();\n\n    let TheOwnerAddress = CONFIG.OWNER_ADDRESS;\n    TheOwnerAddress = TheOwnerAddress.toUpperCase();\n\n    if (WalletAddress==TheOwnerAddress) {\n      CONFIG.WEI_COST=0;\n\n    } else if  \n    \n      (data.totalSupply > 1 && data.totalSupply < 5000  ) \n        CONFIG.WEI_COST=CONFIG.WEI_COST;\n       \n    \n       \n    let cost = CONFIG.WEI_COST;\n  \n    let cost1 = CONFIG.COST1;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, Try  to mint again Something is wrong.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(  `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== '' && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch('/config/config.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n      <div className='main'>\n        <div className='header__logo'>\n          <img src={logo} alt='logo' />\n        </div>\n        <div className='container'>\n          <div className='left__col'></div>\n          <div className='right__col'>\n            <h3 className='title'>Mint bavarian bears </h3>\n            <h1 className='count'>\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </h1>\n            <h3 className='sub__title'>0.1 eth per Lam</h3>\n            <div className='description'>\n              <p>Excluding gas fee </p>\n              <p>connect to ethereum network</p>\n            </div>\n\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <p className='font-bold text-default'>The sale has ended.</p>\n                <p className='font-bold text-default'>\n                  You can still find {CONFIG.NFT_NAME} on\n                </p>\n\n                <a target='_blank' href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </a>\n              </>\n            ) : (\n              <>\n                {blockchain.account === '' ||\n                blockchain.smartContract === null ? (\n                  <>\n                    <button\n                      className='btn'\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      Connect\n                    </button>\n                    {blockchain.errorMsg !== '' ? (\n                      <>\n                        <p className='err__msg'>{blockchain.errorMsg}</p>\n                      </>\n                    ) : null}\n                  </>\n                ) : (\n                  <>\n                    <p className='err__msg'>{feedback}</p>\n                    <>\n                      <div className='buy__wrapper'>\n                        <div>\n                          <button\n                            className=''\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              decrementMintAmount();\n                            }}\n                          >\n                            <span className='text-xl'>-</span>\n                          </button>\n                        </div>\n\n                        <p className='text-default font-bold text-xl border px-4 py-0.5 rounded-sm'>\n                          {mintAmount}\n                        </p>\n                        <div>\n                          <button\n                            className=''\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              incrementMintAmount();\n                            }}\n                          >\n                            <span className='text-xl'>+</span>\n                          </button>\n                        </div>\n                      </div>\n                    </>\n                    <>\n                      <div>\n                        <button\n                          className='btn mint__btn'\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          <span>{claimingNft ? 'BUSY' : 'MINT'}</span>\n                        </button>\n                      </div>\n                    </>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}